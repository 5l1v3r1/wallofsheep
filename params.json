{"name":"Wallofsheep","tagline":"Wall of Sheep","body":"Wall of Sheep\r\n=============\r\n```\r\n _       _____    __    __       ____  ______   _____ __  __________________\r\n| |     / /   |  / /   / /      / __ \\/ ____/  / ___// / / / ____/ ____/ __ \\\r\n| | /| / / /| | / /   / /      / / / / /_      \\__ \\/ /_/ / __/ / __/ / /_/ /\r\n| |/ |/ / ___ |/ /___/ /___   / /_/ / __/     ___/ / __  / /___/ /___/ ____/\r\n|__/|__/_/  |_/_____/_____/   \\____/_/       /____/_/ /_/_____/_____/_/\r\n\r\n```\r\n\r\n[![Join the chat at https://gitter.im/John-Lin/wallofsheep](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/John-Lin/wallofsheep?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\nThe Wall of Sheep is dedicated to network security research and we make use of a powerful API provided by [RethinkDB](http://www.rethinkdb.com/), [Firebase](https://www.firebase.com/) to store and sync data in realtime.\r\n\r\nWithout SSL/TLS, your password is just like streaking. Therefore, we recommend that service provider in the list should secure their websites with HTTPS.\r\n\r\nYou can check out the [demo page](https://amber-inferno-5029.firebaseapp.com).\r\nThe circle symbolizes that the status of sniffer program. Green is online, otherwise offline.\r\n\r\nWe built sniffer in two languages `Python` and `Node.js`. The `Node.js` version support on OSX and Linux. Unfortunately, The `Python` version only support on Linux.\r\n\r\nNew implementation in Node.js\r\n=============\r\n\r\n**[April 18, 2015 Updated]** Add `Node.js` sniffer implementation. Now OSX user can play with it. :laughing:\r\n\r\nWe believe that using JavaScript is more efficient. Please refer to [Why capture packets in JavaScript?](https://github.com/mranney/node_pcap#why-capture-packets-in-javascript)\r\n\r\nIn simple terms\r\n\r\n- Event-based.\r\n- Handling binary data is fast and efficient.\r\n- Good HTTP parser.\r\n\r\nInstallation\r\n=============\r\n\r\nHere is installation method.\r\n\r\nUsing brew install `Node.js`, `npm` and `rethinkdb` (option).\r\n\r\n```\r\n$ brew update\r\n$ brew install node\r\n$ brew install npm\r\n$ brew install rethinkdb\r\n```\r\n\r\nClone the repo and change directory to `nodejs` folder.\r\n\r\n```\r\n$ git clone git@github.com:John-Lin/wallofsheep.git\r\n```\r\n\r\nPacket capturing depends on [mranney/node_pcap](https://github.com/mranney/node_pcap) and save data to RethinkDB using [neumino/thinky](https://github.com/neumino/thinky) (option) you can use `npm` to get these packages.\r\n\r\n```\r\n$ npm install\r\n```\r\n\r\nThat's it.\r\n\r\nBasic usage\r\n=============\r\n\r\nTwo ways to use\r\n\r\nNot saving the credentials. Start the `sniffer` with sudo\r\n\r\n```\r\njohn at JohnsMacBook-Air in ~/Repository/wallofsheep/nodejs (master●●)\r\n$ sudo node sniffer.js -i en0\r\n[-] Loading RethinkDB module.\r\n  _       _____    __    __       ____  ______   _____ __  __________________\r\n| |     / /   |  / /   / /      / __ \\/ ____/  / ___// / / / ____/ ____/ __ \\\r\n| | /| / / /| | / /   / /      / / / / /_      \\__ \\/ /_/ / __/ / __/ / /_/ /\r\n| |/ |/ / ___ |/ /___/ /___   / /_/ / __/     ___/ / __  / /___/ /___/ ____/\r\n|__/|__/_/  |_/_____/_____/   \\____/_/       /____/_/ /_/_____/_____/_/\r\n[*] Using interface: en0\r\n[192.168.0.16:61881 -> 140.***.**.***:80] Account: hello@gmail.com\r\n[192.168.0.16:61881 -> 140.***.**.***:80] Password: thisispassword\r\n```\r\n\r\n\r\nSaving credentials in RethinkDB need `-s` option.\r\n\r\nFirst, start the RethinkDB server like this:\r\n\r\n```\r\n$ rethinkdb\r\ninfo: Creating directory 'rethinkdb_data'\r\ninfo: Listening for intracluster connections on port 29015\r\ninfo: Listening for client driver connections on port 28015\r\ninfo: Listening for administrative HTTP connections on port 8080\r\ninfo: Server ready\r\n```\r\n\r\nSecond, open a new terminal and start the `sniffer` with sudo\r\n\r\n```\r\njohn at JohnsMacBook-Air in ~/Repository/wallofsheep/nodejs (master●●)\r\n$ sudo node sniffer.js -i en0 -s\r\n[-] Loading RethinkDB module.\r\n  _       _____    __    __       ____  ______   _____ __  __________________\r\n| |     / /   |  / /   / /      / __ \\/ ____/  / ___// / / / ____/ ____/ __ \\\r\n| | /| / / /| | / /   / /      / / / / /_      \\__ \\/ /_/ / __/ / __/ / /_/ /\r\n| |/ |/ / ___ |/ /___/ /___   / /_/ / __/     ___/ / __  / /___/ /___/ ____/\r\n|__/|__/_/  |_/_____/_____/   \\____/_/       /____/_/ /_/_____/_____/_/\r\n[*] Using interface: en0\r\n[192.168.0.16:61881 -> 140.***.**.***:80] Account: hello@gmail.com\r\n[192.168.0.16:61881 -> 140.***.**.***:80] Password: thisispassword\r\n```\r\nHow to Run Web\r\n==============\r\n**Deploy firebase web**  \r\nFirst, Install firebase toolkits.\r\n\r\n```\r\n╭─~/Coding/Projects/web/wallofsheep/firebase_app on master✔ using\r\n╰─± npm install -g firebase-tools\r\n```\r\n\r\nFind out the following code snippet in **firebase_app/index.html** and change to your own firebase's project id and create both **pwd_table** & **status** table in the Firebase management panel.\r\n\r\n```\r\nvar myDataRef = new Firebase('https://<your-project-id>.firebaseio.com/pwd_table'),\r\n    statusRef = new Firebase('https://<your-project-id>.firebaseio.com/status'),\r\n```\r\nLast, just do\r\n\r\n```\r\n╭─~/Coding/Projects/web/wallofsheep/firebase_app on master✔ using\r\n╰─± firebase deploy\r\n```\r\nAfter a moment, you can find your site on https://your-project-id.firebaseapp.com\r\n\r\n**Running web implemented in express**  \r\nJust change directory to express_app, do the following command, do not forget to run rethinkdb and sniffer.js metioned above.\r\n\r\n```\r\n╭─~/Coding/Projects/web/wallofsheep/express_app on master✔ using\r\n╰─± npm install & npm start\r\n```\r\nNow, You can wait for the comming sheep :smile:\r\n\r\nWork in progress\r\n================\r\n- [x] Support [RethinkDB](http://www.rethinkdb.com/) provided push/sync data in realtime.\r\n- [x] Parsing user/password in IMAP protocol.\r\n- [x] Parsing user/password in POP3 protocol.\r\n- [ ] A new Web interface for showing off rely on [RethinkDB](http://www.rethinkdb.com/).\r\n- [ ] Any protocol not encrypted (e.g., telnet, irc etc.)\r\n\r\n\r\nScreenshot\r\n===========\r\n![wallofsheep](/screenshot/screenshot.jpeg?raw=true \"Wall of Sheep\")\r\n\r\n\r\nContributing\r\n===========\r\nYour contribution is welcome :octocat: ! follow these steps:\r\n\r\n- Fork this project.\r\n- Create a branch (git checkout -b my_feature_patch)\r\n- Commit your changes (git commit -am \"Added Something Feature\")\r\n- Push to the branch (git push origin my_feature_patch)\r\n- Open a Pull Request\r\n- Wait for merge :smile:\r\n\r\n\r\nContributors\r\n===========\r\n- [John-Lin](https://github.com/John-Lin)\r\n- [lockys](https://github.com/lockys)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}